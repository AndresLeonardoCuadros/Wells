package NewDSL.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptorImpl;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAlsProductionWell = createDescriptorForAlsProductionWell();
  /*package*/ final ConceptDescriptor myConceptCarbonateReservoir = createDescriptorForCarbonateReservoir();
  /*package*/ final ConceptDescriptor myConceptCoordinates = createDescriptorForCoordinates();
  /*package*/ final ConceptDescriptor myConceptDepositWell = createDescriptorForDepositWell();
  /*package*/ final ConceptDescriptor myConceptDesignerWell = createDescriptorForDesignerWell();
  /*package*/ final ConceptDescriptor myConceptExploratoryWell = createDescriptorForExploratoryWell();
  /*package*/ final ConceptDescriptor myConceptHorizontalWell = createDescriptorForHorizontalWell();
  /*package*/ final ConceptDescriptor myConceptInjectionWell = createDescriptorForInjectionWell();
  /*package*/ final ConceptDescriptor myConceptInstalledAccessories = createDescriptorForInstalledAccessories();
  /*package*/ final ConceptDescriptor myConceptMultilateralWell = createDescriptorForMultilateralWell();
  /*package*/ final ConceptDescriptor myConceptNaturalFlowProductionWell = createDescriptorForNaturalFlowProductionWell();
  /*package*/ final ConceptDescriptor myConceptProductionWell = createDescriptorForProductionWell();
  /*package*/ final ConceptDescriptor myConceptReservoir = createDescriptorForReservoir();
  /*package*/ final ConceptDescriptor myConceptSiliciclasticReservoir = createDescriptorForSiliciclasticReservoir();
  /*package*/ final ConceptDescriptor myConceptTargets = createDescriptorForTargets();
  /*package*/ final ConceptDescriptor myConceptWell = createDescriptorForWell();
  /*package*/ final EnumerationDescriptor myEnumerationAlsType = new EnumerationDescriptor_AlsType();
  /*package*/ final EnumerationDescriptor myEnumerationCarbonateType = new EnumerationDescriptor_CarbonateType();
  /*package*/ final EnumerationDescriptor myEnumerationDrillingOperation = new EnumerationDescriptor_DrillingOperation();
  /*package*/ final EnumerationDescriptor myEnumerationInjectionType = new EnumerationDescriptor_InjectionType();
  /*package*/ final EnumerationDescriptor myEnumerationSiliciclasticType = new EnumerationDescriptor_SiliciclasticType();
  /*package*/ final EnumerationDescriptor myEnumerationWellheadType = new EnumerationDescriptor_WellheadType();
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatypefloat = new ConstrainedStringDatatypeDescriptorImpl(0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81dd7bL, "float", "r:c2e19f41-b779-4566-b6a0-4e4349db4a36(NewDSL.structure)/3039746628509621627", "[+-]?[0-9]+(\\.[0-9]+)?([Ee][+-]?[0-9]+)?");
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
    deps.aggregatedLanguage(0xf8b003b890094569L, 0xbf6aa5ebb10d759dL, "OilPP");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAlsProductionWell, myConceptCarbonateReservoir, myConceptCoordinates, myConceptDepositWell, myConceptDesignerWell, myConceptExploratoryWell, myConceptHorizontalWell, myConceptInjectionWell, myConceptInstalledAccessories, myConceptMultilateralWell, myConceptNaturalFlowProductionWell, myConceptProductionWell, myConceptReservoir, myConceptSiliciclasticReservoir, myConceptTargets, myConceptWell);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.AlsProductionWell:
        return myConceptAlsProductionWell;
      case LanguageConceptSwitch.CarbonateReservoir:
        return myConceptCarbonateReservoir;
      case LanguageConceptSwitch.Coordinates:
        return myConceptCoordinates;
      case LanguageConceptSwitch.DepositWell:
        return myConceptDepositWell;
      case LanguageConceptSwitch.DesignerWell:
        return myConceptDesignerWell;
      case LanguageConceptSwitch.ExploratoryWell:
        return myConceptExploratoryWell;
      case LanguageConceptSwitch.HorizontalWell:
        return myConceptHorizontalWell;
      case LanguageConceptSwitch.InjectionWell:
        return myConceptInjectionWell;
      case LanguageConceptSwitch.InstalledAccessories:
        return myConceptInstalledAccessories;
      case LanguageConceptSwitch.MultilateralWell:
        return myConceptMultilateralWell;
      case LanguageConceptSwitch.NaturalFlowProductionWell:
        return myConceptNaturalFlowProductionWell;
      case LanguageConceptSwitch.ProductionWell:
        return myConceptProductionWell;
      case LanguageConceptSwitch.Reservoir:
        return myConceptReservoir;
      case LanguageConceptSwitch.SiliciclasticReservoir:
        return myConceptSiliciclasticReservoir;
      case LanguageConceptSwitch.Targets:
        return myConceptTargets;
      case LanguageConceptSwitch.Well:
        return myConceptWell;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationAlsType, myEnumerationCarbonateType, myEnumerationDrillingOperation, myEnumerationInjectionType, myEnumerationSiliciclasticType, myEnumerationWellheadType, myCSDatatypefloat);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAlsProductionWell() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewDSL", "AlsProductionWell", 0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81de1eL);
    b.class_(false, false, true);
    // extends: NewDSL.structure.ProductionWell
    b.super_(0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81dd6bL);
    b.origin("r:c2e19f41-b779-4566-b6a0-4e4349db4a36(NewDSL.structure)/3039746628509621790");
    b.version(3);
    b.property("type", 0x2a2f59740f81de45L).type(MetaIdFactory.dataTypeId(0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81de21L)).origin("3039746628509621829").done();
    b.property("pumpBrand", 0x2a2f59740f81de47L).type(PrimitiveTypeId.INTEGER).origin("3039746628509621831").done();
    b.property("pumpSettlementDepth", 0x2a2f59740f81de4bL).type(MetaIdFactory.dataTypeId(0xf8b003b890094569L, 0xbf6aa5ebb10d759dL, 0x2a2f59740f81dd7bL)).origin("3039746628509621835").done();
    b.aggregate("accessories", 0x2a2f59740f81de57L).target(0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81de50L).optional(true).ordered(true).multiple(true).origin("3039746628509621847").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCarbonateReservoir() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewDSL", "CarbonateReservoir", 0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81de0bL);
    b.class_(false, false, false);
    // extends: NewDSL.structure.Reservoir
    b.super_(0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81ddcaL);
    b.origin("r:c2e19f41-b779-4566-b6a0-4e4349db4a36(NewDSL.structure)/3039746628509621771");
    b.version(3);
    b.property("type", 0x2a2f59740f81de0fL).type(MetaIdFactory.dataTypeId(0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x1dad7a2dd30e511bL)).origin("3039746628509621775").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCoordinates() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewDSL", "Coordinates", 0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81dd92L);
    b.class_(false, false, false);
    b.origin("r:c2e19f41-b779-4566-b6a0-4e4349db4a36(NewDSL.structure)/3039746628509621650");
    b.version(3);
    b.property("latitude", 0x2a2f59740f81dd93L).type(MetaIdFactory.dataTypeId(0xf8b003b890094569L, 0xbf6aa5ebb10d759dL, 0x2a2f59740f81dd7bL)).origin("3039746628509621651").done();
    b.property("longitude", 0x2a2f59740f81dd95L).type(MetaIdFactory.dataTypeId(0xf8b003b890094569L, 0xbf6aa5ebb10d759dL, 0x2a2f59740f81dd7bL)).origin("3039746628509621653").done();
    b.property("altitude", 0x2a2f59740f81dd98L).type(MetaIdFactory.dataTypeId(0xf8b003b890094569L, 0xbf6aa5ebb10d759dL, 0x2a2f59740f81dd7bL)).origin("3039746628509621656").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDepositWell() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewDSL", "DepositWell", 0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81de7dL);
    b.class_(false, false, true);
    // extends: NewDSL.structure.Well
    b.super_(0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81dd67L);
    b.origin("r:c2e19f41-b779-4566-b6a0-4e4349db4a36(NewDSL.structure)/3039746628509621885");
    b.version(3);
    b.property("depthPressure", 0x2a2f59740f81de83L).type(MetaIdFactory.dataTypeId(0xf8b003b890094569L, 0xbf6aa5ebb10d759dL, 0x2a2f59740f81dd7bL)).origin("3039746628509621891").done();
    b.property("temperaturePressure", 0x2a2f59740f81de88L).type(MetaIdFactory.dataTypeId(0xf8b003b890094569L, 0xbf6aa5ebb10d759dL, 0x2a2f59740f81dd7bL)).origin("3039746628509621896").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDesignerWell() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewDSL", "DesignerWell", 0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81de94L);
    b.class_(false, false, true);
    // extends: NewDSL.structure.Well
    b.super_(0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81dd67L);
    b.origin("r:c2e19f41-b779-4566-b6a0-4e4349db4a36(NewDSL.structure)/3039746628509621908");
    b.version(3);
    b.aggregate("targets", 0x2a2f59740f81de9aL).target(0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81de96L).optional(true).ordered(true).multiple(true).origin("3039746628509621914").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExploratoryWell() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewDSL", "ExploratoryWell", 0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81de70L);
    b.class_(false, false, true);
    // extends: NewDSL.structure.Well
    b.super_(0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81dd67L);
    b.origin("r:c2e19f41-b779-4566-b6a0-4e4349db4a36(NewDSL.structure)/3039746628509621872");
    b.version(3);
    b.property("depthPressure", 0x2a2f59740f81de73L).type(MetaIdFactory.dataTypeId(0xf8b003b890094569L, 0xbf6aa5ebb10d759dL, 0x2a2f59740f81dd7bL)).origin("3039746628509621875").done();
    b.property("temperaturePressure", 0x2a2f59740f81de75L).type(MetaIdFactory.dataTypeId(0xf8b003b890094569L, 0xbf6aa5ebb10d759dL, 0x2a2f59740f81dd7bL)).origin("3039746628509621877").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForHorizontalWell() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewDSL", "HorizontalWell", 0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81de8fL);
    b.class_(false, false, true);
    // extends: NewDSL.structure.Well
    b.super_(0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81dd67L);
    b.origin("r:c2e19f41-b779-4566-b6a0-4e4349db4a36(NewDSL.structure)/3039746628509621903");
    b.version(3);
    b.property("drillingAngle", 0x2a2f59740f81de91L).type(MetaIdFactory.dataTypeId(0xf8b003b890094569L, 0xbf6aa5ebb10d759dL, 0x2a2f59740f81dd7bL)).origin("3039746628509621905").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInjectionWell() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewDSL", "InjectionWell", 0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81de5bL);
    b.class_(false, false, true);
    // extends: NewDSL.structure.Well
    b.super_(0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81dd67L);
    b.origin("r:c2e19f41-b779-4566-b6a0-4e4349db4a36(NewDSL.structure)/3039746628509621851");
    b.version(3);
    b.property("injectionType", 0x2a2f59740f81de69L).type(MetaIdFactory.dataTypeId(0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81de5eL)).origin("3039746628509621865").done();
    b.property("injectedVolume", 0x2a2f59740f81de6bL).type(MetaIdFactory.dataTypeId(0xf8b003b890094569L, 0xbf6aa5ebb10d759dL, 0x2a2f59740f81dd7bL)).origin("3039746628509621867").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInstalledAccessories() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewDSL", "InstalledAccessories", 0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81de50L);
    b.class_(false, false, false);
    b.origin("r:c2e19f41-b779-4566-b6a0-4e4349db4a36(NewDSL.structure)/3039746628509621840");
    b.version(3);
    b.property("accessory", 0x2a2f59740f81de53L).type(PrimitiveTypeId.STRING).origin("3039746628509621843").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMultilateralWell() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewDSL", "MultilateralWell", 0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81de9dL);
    b.class_(false, false, true);
    // extends: NewDSL.structure.Well
    b.super_(0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81dd67L);
    b.origin("r:c2e19f41-b779-4566-b6a0-4e4349db4a36(NewDSL.structure)/3039746628509621917");
    b.version(3);
    b.property("branches", 0x2a2f59740f81de9fL).type(PrimitiveTypeId.INTEGER).origin("3039746628509621919").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNaturalFlowProductionWell() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewDSL", "NaturalFlowProductionWell", 0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81de1bL);
    b.class_(false, false, true);
    // extends: NewDSL.structure.ProductionWell
    b.super_(0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81dd6bL);
    b.origin("r:c2e19f41-b779-4566-b6a0-4e4349db4a36(NewDSL.structure)/3039746628509621787");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProductionWell() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewDSL", "ProductionWell", 0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81dd6bL);
    b.class_(false, true, true);
    // extends: NewDSL.structure.Well
    b.super_(0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81dd67L);
    b.origin("r:c2e19f41-b779-4566-b6a0-4e4349db4a36(NewDSL.structure)/3039746628509621611");
    b.version(3);
    b.property("bpd", 0x2a2f59740f81de19L).type(MetaIdFactory.dataTypeId(0xf8b003b890094569L, 0xbf6aa5ebb10d759dL, 0x2a2f59740f81dd7bL)).origin("3039746628509621785").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForReservoir() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewDSL", "Reservoir", 0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81ddcaL);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:c2e19f41-b779-4566-b6a0-4e4349db4a36(NewDSL.structure)/3039746628509621706");
    b.version(3);
    b.property("pososity", 0x2a2f59740f81ddceL).type(MetaIdFactory.dataTypeId(0xf8b003b890094569L, 0xbf6aa5ebb10d759dL, 0x2a2f59740f81dd7bL)).origin("3039746628509621710").done();
    b.property("permeability", 0x2a2f59740f81ddd0L).type(MetaIdFactory.dataTypeId(0xf8b003b890094569L, 0xbf6aa5ebb10d759dL, 0x2a2f59740f81dd7bL)).origin("3039746628509621712").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSiliciclasticReservoir() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewDSL", "SiliciclasticReservoir", 0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81de0cL);
    b.class_(false, false, false);
    // extends: NewDSL.structure.Reservoir
    b.super_(0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81ddcaL);
    b.origin("r:c2e19f41-b779-4566-b6a0-4e4349db4a36(NewDSL.structure)/3039746628509621772");
    b.version(3);
    b.property("type", 0x2a2f59740f81de11L).type(MetaIdFactory.dataTypeId(0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x1dad7a2dd30da9adL)).origin("3039746628509621777").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTargets() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewDSL", "Targets", 0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81de96L);
    b.class_(false, false, false);
    b.origin("r:c2e19f41-b779-4566-b6a0-4e4349db4a36(NewDSL.structure)/3039746628509621910");
    b.version(3);
    b.property("target", 0x2a2f59740f81de97L).type(PrimitiveTypeId.STRING).origin("3039746628509621911").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWell() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewDSL", "Well", 0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81dd67L);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:c2e19f41-b779-4566-b6a0-4e4349db4a36(NewDSL.structure)/3039746628509621607");
    b.version(3);
    b.property("casingSize", 0x2a2f59740f81dd71L).type(MetaIdFactory.dataTypeId(0xf8b003b890094569L, 0xbf6aa5ebb10d759dL, 0x2a2f59740f81dd7bL)).origin("3039746628509621617").done();
    b.property("pipeSize", 0x2a2f59740f81dd76L).type(MetaIdFactory.dataTypeId(0xf8b003b890094569L, 0xbf6aa5ebb10d759dL, 0x2a2f59740f81dd7bL)).origin("3039746628509621622").done();
    b.property("wellheadType", 0x2a2f59740f81dd7fL).type(MetaIdFactory.dataTypeId(0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81dd84L)).origin("3039746628509621631").done();
    b.property("pressure", 0x2a2f59740f81dd8dL).type(MetaIdFactory.dataTypeId(0xf8b003b890094569L, 0xbf6aa5ebb10d759dL, 0x2a2f59740f81dd7bL)).origin("3039746628509621645").done();
    b.property("temperature", 0x2a2f59740f81dd9dL).type(MetaIdFactory.dataTypeId(0xf8b003b890094569L, 0xbf6aa5ebb10d759dL, 0x2a2f59740f81dd7bL)).origin("3039746628509621661").done();
    b.property("drillingOperation", 0x2a2f59740f81ddbaL).type(MetaIdFactory.dataTypeId(0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81ddc1L)).origin("3039746628509621690").done();
    b.aggregate("coordinates", 0x2a2f59740f81ddb4L).target(0x70d970ca2bc64a80L, 0xa08c12893f37926cL, 0x2a2f59740f81dd92L).optional(false).ordered(true).multiple(false).origin("3039746628509621684").done();
    b.aggregate("carbonateReservoir", 0x2a2f59740f820151L).target(0xf8b003b890094569L, 0xbf6aa5ebb10d759dL, 0x2a2f59740f81de0bL).optional(true).ordered(true).multiple(false).origin("3039746628509630801").done();
    b.aggregate("siliciclasticReservoir", 0x2a2f59740f820154L).target(0xf8b003b890094569L, 0xbf6aa5ebb10d759dL, 0x2a2f59740f81de0cL).optional(true).ordered(true).multiple(false).origin("3039746628509630804").done();
    b.alias("well");
    return b.create();
  }
}
